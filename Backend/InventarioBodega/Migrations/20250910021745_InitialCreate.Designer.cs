// <auto-generated />
using System;
using InventarioBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InventarioBackend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250910021745_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InventarioBackend.Models.Inventario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Alto")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Ancho")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Calibre")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Densidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ImpresoNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Impreso/No");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReferenciaNormalizada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoColor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Segundo color");

                    b.Property<string>("TipoBolsa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Tipo de Bolsa");

                    b.Property<string>("TipoMaterial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Tipo Material");

                    b.HasKey("Id");

                    b.ToTable("Inventario");
                });

            modelBuilder.Entity("InventarioBackend.Models.InventarioItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaRegistroItem")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdInventario")
                        .HasColumnType("int");

                    b.Property<decimal>("PesoActual")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ReferenciaPeso")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("IdInventario");

                    b.ToTable("InventarioItems");
                });

            modelBuilder.Entity("InventarioBackend.Models.MovimientoInventario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdInventario")
                        .HasColumnType("int");

                    b.Property<int>("IdInventarioItem")
                        .HasColumnType("int");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferenciaPeso")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdInventario");

                    b.HasIndex("IdInventarioItem");

                    b.ToTable("MovimientosInventario");
                });

            modelBuilder.Entity("InventarioBackend.Models.InventarioItem", b =>
                {
                    b.HasOne("InventarioBackend.Models.Inventario", "Inventario")
                        .WithMany("InventarioItems")
                        .HasForeignKey("IdInventario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventario");
                });

            modelBuilder.Entity("InventarioBackend.Models.MovimientoInventario", b =>
                {
                    b.HasOne("InventarioBackend.Models.Inventario", "Inventario")
                        .WithMany("Movimientos")
                        .HasForeignKey("IdInventario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InventarioBackend.Models.InventarioItem", "InventarioItem")
                        .WithMany("Movimientos")
                        .HasForeignKey("IdInventarioItem")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Inventario");

                    b.Navigation("InventarioItem");
                });

            modelBuilder.Entity("InventarioBackend.Models.Inventario", b =>
                {
                    b.Navigation("InventarioItems");

                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("InventarioBackend.Models.InventarioItem", b =>
                {
                    b.Navigation("Movimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
